<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，做sql隔离 -->
<mapper namespace="cn.yichen.bootwebmybatis.security.dao.ISysModelDao">
    <!-- 
        id:sql语句唯一标识
        parameterType:指定传入参数类型(对应javaBean类型，写原始型会自动包装为包装类)
        resultType：返回结果类型
        #{}:占位符号，起到占位作用，如果传入的是原始型，那么括号中的变量名称可以随意定义
     -->
     
    <!-- 启动对给定命名空间的缓存并进行配置 -->
    <cache></cache>
     
    <resultMap id="sysModuleModelMap" type="SysModel">
    	<id column="MNO" property="no"/>
    	<result column="MName" property="name"/>
    </resultMap>

    <sql id="sysModulWhen">
	    	<if test="no != null"> and MNO = #{no} </if>
	    	<if test="name != null"> and MName like '%${name}%' </if>
    </sql>
    
    <insert id="create" flushCache="true">
		insert into systemmodule(MNO, MName) values(#{no}, #{name})
	</insert>
	
	<delete id="delete" flushCache="true">
		delete from systemmodule where MNO = #{no}
	</delete>
     
    <update id="update" flushCache="true">
    	update systemmodule set MName = #{name} where MNO = #{no}
    </update>
     
    <select id="selectListById" resultMap="sysModuleModelMap" useCache="true">
    	select MNO, MName from systemmodule where MNO = #{no}
    </select>
     
    <select id="selectListByAll" resultMap="sysModuleModelMap" >
        select MNO, MName from systemmodule
        <where>
        	<include refid="sysModulWhen"></include>
        </where>
    </select>
    
</mapper>