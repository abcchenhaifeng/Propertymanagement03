<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="cn.yichen.propertymgt.admin.mapper.IUserInfoMapper">

	<cache />

	<resultMap id="UserInfoMap" type="UserInfo">
		<id column="USERID" property="id" />
		<result column="UNAME" property="username" />
		<result column="UPASSWORD" property="password" />
		<result column="SEX" property="sex" />
		<result column="AGE" property="age" />
		<result column="Mobible" property="mobible" />
		<result column="UserStatus" property="status" />
	</resultMap>

	<resultMap id="UserInfoMapWithFunction" type="UserInfo"
		extends="UserInfoMap">
		<collection property="functions"
			resultMap="cn.yichen.propertymgt.admin.mapper.ISystemFunctionMapper.SystemFunctionMapWithModule">
		</collection>
	</resultMap>

	<sql id="userInfoWhen">
		<if test="userInfo != null">
			<if test="userInfo.id != null"> and USERID like '%${userInfo.id}%' </if>
			<!-- <if test="userInfo.password != null"> and UPASSWORD = #{userInfo.password} 
				</if> -->
			<if test="userInfo.username != null"> and UNAME like '%${userInfo.username}%' </if>
			<if test="userInfo.mobible != null"> and Mobible like '%${userInfo.mobible}%' </if>
			<if test="userInfo.age != null"> and age = #{userInfo.age} </if>
			<if test="userInfo.sex != null"> and SEX = #{userInfo.sex} </if>
			<if test="userInfo.status != null"> and UserStatus = #{userInfo.status} </if>
		</if>
	</sql>
	
	<delete id="delete" flushCache="true">delete from UserInfo where USERID = #{id}</delete>

	<insert id="create" flushCache="true">insert into UserInfo(USERID, UPASSWORD, UNAME, UserStatus, AGE, SEX, Mobible) values(#{id}, #{password}, #{username}, #{status}, #{age}, #{sex}, #{mobible})</insert>

	<update id="update" flushCache="true">update UserInfo set UPASSWORD = #{password}, UNAME = #{username}, UserStatus = #{status}, AGE = #{age}, SEX = #{sex}, Mobible = #{mobible} where USERID = #{id}</update>

	<insert id="addFunction" flushCache="true">insert into SystemFunctionUser(USERID, FUNNO) values(#{id}, #{funNo})</insert>

	<delete id="deleteFunction" flushCache="true">delete from SystemFunctionUser where USERID = #{id} and FUNNO = #{funNo}"</delete>

	<select id="selectUserInfoById"
		resultMap="UserInfoMapWithFunction">
		select u.*, f.*, m.MNAME
		from UserInfo u, SystemFunctionUser
		fu, SystemFunction f, SystemModule m
		where u.USERID = #{id} and
		u.USERID = fu.USERID and fu.FUNNO = f.FUNNO and f.MNO = m.MNO
	</select>

	<select id="selectListByAll" resultMap="UserInfoMap">
		select USERID, UPASSWORD, UNAME, UserStatus, AGE, SEX, Mobible
		from
		UserInfo
		<where>
			<include refid="userInfoWhen"></include>
		</where>
	</select>

	<select id="selectListByAllWithPage" resultMap="UserInfoMap">
		select USERID, UPASSWORD, UNAME, UserStatus, AGE, SEX, Mobible
		from
		UserInfo
		<where>
			<include refid="userInfoWhen"></include>
			and USERID >= (SELECT USERID FROM UserInfo ORDER BY USERID LIMIT
			#{start}, 1) LIMIT #{rows}
		</where>
	</select>

	<insert id="addFunctions"  flushCache="true">
		insert into SystemFunctionUser(USERID, FUNNO)
		values
		<foreach collection="funNos" item="funNo" separator=",">
			(#{id}, #{funNo})
		</foreach>
	</insert>

	<!-- 取得个数，使用IFNULL函数判断count函数结果是否为null, 为null返回0 -->
	<select id="selectCountByAll" resultType="int">
		select IFNULL(count(USERID), 0) from UserInfo
		<where>
			<include refid="userInfoWhen"></include>
		</where>
	</select>
</mapper>